-- mm2 coin farm ü§ëü§ëü§ë (ch·ªâ farm khi ƒëang ·ªü TRONG map m·ªõi)
-- Y√™u c·∫ßu: ·ªû lobby -> KH√îNG teleport v√†o map ng∆∞·ªùi kh√°c ƒëang ch∆°i.
-- Ch·ªâ khi h·ªá th·ªëng ƒë∆∞a v√†o map (b·∫°n ƒë·ª©ng th·∫≠t s·ª± trong map) m·ªõi b·∫Øt ƒë·∫ßu farm.

-- // === Services / Refs ===
local TweenService = game:GetService("TweenService")
local Players      = game:GetService("Players")
local RS           = game:GetService("ReplicatedStorage")
local LP           = Players.LocalPlayer

-- B·∫£o ƒë·∫£m Character/HRP lu√¥n h·ª£p l·ªá (respawn an to√†n)
local function getChar()
    local char = LP.Character or LP.CharacterAdded:Wait()
    local hrp  = char:FindFirstChild("HumanoidRootPart") or char:WaitForChild("HumanoidRootPart")
    local hum  = char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid")
    return char, hrp, hum
end
local Char, HRP, Humanoid = getChar()
LP.CharacterAdded:Connect(function()
    Char, HRP, Humanoid = getChar()
end)

-- // === Map / Round detect ===
local function findActiveMap()
    for _, obj in ipairs(workspace:GetChildren()) do
        if obj:GetAttribute("MapID") and obj:FindFirstChild("CoinContainer") then
            return obj
        end
    end
    return nil
end

-- Bool: c√≥ round ƒëang di·ªÖn ra kh√¥ng?
local function isRoundLive()
    -- 1) ∆Øu ti√™n GameData.InRound n·∫øu c√≥
    local ok, inRound = pcall(function()
        local gd = RS:FindFirstChild("GameData")
        local iv = gd and gd:FindFirstChild("InRound")
        return iv and iv.Value
    end)
    if ok and inRound ~= nil then return inRound end

    -- 2) Fallback: c√≥ Map + c√≥ Coin
    local m = findActiveMap()
    if not m then return false end
    local cc = m:FindFirstChild("CoinContainer")
    if not cc then return false end
    if #cc:GetChildren() > 0 then return true end
    local t0 = os.clock()
    while os.clock() - t0 < 2 do
        if #cc:GetChildren() > 0 then return true end
        task.wait(0.1)
    end
    return false
end

-- Ki·ªÉm tra: nh√¢n v·∫≠t ƒëang ƒë·ª©ng B√äN TRONG map ch∆∞a?
local function isPlayerInsideMap(mapModel)
    if not (mapModel and HRP) then return false end
    -- D√πng bounding box c·ªßa map ƒë·ªÉ ki·ªÉm tra v·ªã tr√≠
    local cf, size = mapModel:GetBoundingBox()
    -- N·ªõi bi√™n m·ªôt ch√∫t ƒë·ªÉ tr√°nh l·ªách
    local pad = Vector3.new(6, 6, 6)
    size = size + pad
    local localPos = cf:PointToObjectSpace(HRP.Position)
    local half = size / 2
    return math.abs(localPos.X) <= half.X and math.abs(localPos.Y) <= half.Y and math.abs(localPos.Z) <= half.Z
end

-- Ch·ªù ƒë·∫øn khi round th·∫≠t s·ª± b·∫Øt ƒë·∫ßu V√Ä ng∆∞·ªùi ch∆°i ƒëang ·ªû TRONG map
local function waitForRoundStartInside()
    while true do
        local m = findActiveMap()
        if m and isRoundLive() and isPlayerInsideMap(m) then
            return m
        end
        -- N·∫øu ƒëang ·ªü lobby (kh√¥ng ·ªü trong map), tuy·ªát ƒë·ªëi KH√îNG tp v√†o map
        task.wait(0.25)
    end
end

-- // === Coin logic ===
local function getNearest(mapModel)
    local cc = mapModel and mapModel:FindFirstChild("CoinContainer")
    if not cc then return nil end
    local closest, dist = nil, math.huge
    for _, coin in ipairs(cc:GetChildren()) do
        if coin and coin:IsA("BasePart") then
            local v = coin:FindFirstChild("CoinVisual")
            if v and not v:GetAttribute("Collected") then
                local d = (HRP.Position - coin.Position).Magnitude
                if d < dist then
                    closest = coin
                    dist = d
                end
            end
        end
    end
    return closest
end

local function safeTP(targetPart)
    if not (HRP and targetPart and targetPart.CFrame and Humanoid) then return end
    -- Ch·∫ø ƒë·ªô Physics gi√∫p tween m∆∞·ª£t, gi·∫£m anti-cheat
    Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
    local d = (HRP.Position - targetPart.Position).Magnitude
    local dur = math.clamp(d / 28, 0.10, 2.2) -- t·ªëc ƒë·ªô v·ª´a ph·∫£i, tr√°nh qu√° nhanh b·ªã kick
    local tw = TweenService:Create(HRP, TweenInfo.new(dur, Enum.EasingStyle.Linear), {CFrame = targetPart.CFrame})
    tw:Play()
    tw.Completed:Wait()
end

-- // === Main loop ===
while true do
    -- Ch·ªâ b·∫Øt ƒë·∫ßu khi: c√≥ round + B·∫†N ƒêANG ·ªû TRONG MAP
    local currentMap = waitForRoundStartInside()

    -- Farm cho t·ªõi khi round k·∫øt th√∫c ho·∫∑c b·ªã ƒë·∫©y kh·ªèi map
    while isRoundLive() and currentMap and currentMap.Parent do
        -- n·∫øu ch·∫øt/respawn th√¨ c·∫≠p nh·∫≠t ref
        if not (Char and Char.Parent and HRP and HRP.Parent and Humanoid and Humanoid.Parent) then
            Char, HRP, Humanoid = getChar()
        end

        -- N·∫øu b·∫•t ch·ª£t b·ªã ƒë∆∞a ra lobby gi·ªØa ch·ª´ng -> d·ª´ng farm ngay
        if not isPlayerInsideMap(currentMap) then
            break
        end

        local target = getNearest(currentMap)
        if target then
            -- Ch·ªâ d·ªãch chuy·ªÉn khi v·∫´n c√≤n ·ªü trong map (th√™m l·ªõp an to√†n tr∆∞·ªõc m·ªói tp)
            if isPlayerInsideMap(currentMap) then
                safeTP(target)
            else
                break
            end

            -- gi·ªØ s√°t coin ƒë√≥ ƒë·∫øn khi collected ho·∫∑c coin bi·∫øn m·∫•t/round ƒë·ªïi
            local v = target:FindFirstChild("CoinVisual")
            local t0 = os.clock()
            while isRoundLive() and isPlayerInsideMap(currentMap) and v and v.Parent and not v:GetAttribute("Collected") do
                -- n·∫øu c√≥ coin g·∫ßn h∆°n th√¨ tho√°t ƒë·ªÉ chuy·ªÉn m·ª•c ti√™u
                local n = getNearest(currentMap)
                if n and n ~= target then break end
                -- tr√°nh k·∫πt qu√° l√¢u 1 coin
                if os.clock() - t0 > 2.5 then break end
                task.wait(0.05)
            end
        else
            -- kh√¥ng th·∫•y coin -> ch·ªù ch√∫t r·ªìi check l·∫°i
            task.wait(0.15)
        end
    end

    -- Round xong ho·∫∑c b·ªã ƒë∆∞a ra lobby ‚Üí quay l·∫°i ch·ªù map m·ªõi
    task.wait(0.5)
end


